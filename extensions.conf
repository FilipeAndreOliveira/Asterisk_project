[general]
static=yes
writeprotect=no

[globals]
; This variable has the PATH to our sound files
PATH=/home/mint/sound
; This variable has the PATH to the Google Text-To-Speech script
PATHTTS=/home/mint/zaf-asterisk-googletts-5566ddc/googletts.agi
COUNT=0
CONSOLE=Console/dsp	
; APAGAR VARIAVEIS QUE NAO USAMOS DEPOIS		
IAXINFO=guest
TRUNK=DAHDI/G2
TRUNKMSD=1					



[demo]
;
; We start with what to do when a call first comes in.
;
; APAGAR EXTENSOES A MAIS QUE NAO USAMOS


exten => s,1,Wait(1)			; Wait a second, just for fun
	same => n,Answer()			; Answer the line
	same => n,Set(TIMEOUT(digit)=5)	; Set Digit Timeout to 5 seconds
	same => n,Set(TIMEOUT(response)=10)	; Set Response Timeout to 10 seconds
	same => n(restart),BackGround(demo-congrats)	; Play a congratulatory message
	same => n(instruct),BackGround(demo-instruct)	; Play some instructions
	same => n,WaitExten()		; Wait for an extension to be dialed.

exten => 2,1,BackGround(demo-moreinfo)	; Give some more information.
exten => 2,n,Goto(s,instruct)

exten => 3,1,Set(CHANNEL(language)=fr)		; Set language to french
	same => n,Goto(s,restart)		; Start with the congratulations

exten => 1000,1,Goto(default,s,1)
;
; We also create an example user, 1234, who is on the console and has
; voicemail, etc.
;
exten => 1234,1,Playback(transfer,skip)		; "Please hold while..."
					; (but skip if channel is not up)
	same => n,Gosub(${EXTEN},stdexten(${GLOBAL(CONSOLE)}))
	same => n,Goto(default,s,1)		; exited Voicemail

exten => 1235,1,VoiceMail(1234,u)		; Right to voicemail

exten => 1236,1,Dial(Console/dsp)		; Ring forever
	same => n,VoiceMail(1234,b)		; Unless busy

;
; # for when they're done with the demo
;
exten => #,1,Playback(demo-thanks)	; "Thanks for trying the demo"
	same => n,Hangup()			; Hang them up.

;
; A timeout and "invalid extension rule"
;
exten => t,1,Goto(#,1)			; If they take too long, give up
exten => i,1,Playback(invalid)		; "That's not valid, try again"

;
; Create an extension, 500, for dialing the
; Asterisk demo.
;
exten => 500,1,Playback(demo-abouttotry)	; Let them know what's going on
	same => n,Dial(IAX2/guest@pbx.digium.com/s@default)	; Call the Asterisk demo
	same => n,Playback(demo-nogo)	; Couldn't connect to the demo site
	same => n,Goto(s,6)		; Return to the start over message.

;
; Create an extension, 600, for evaluating echo latency.
;
exten => 600,1,Playback(demo-echotest)	; Let them know what's going on
	same => n,Echo()			; Do the echo test
	same => n,Playback(demo-echodone)	; Let them know it's over
	same => n,Goto(s,6)		; Start over


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; CODIGO DESENVOLVIDO ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

exten => 601,1,NoOp(QUEM ATENDEU: ${EXTEN} ${timezone}) ; Atendeu na chamada de despertador
	same => n, AGI(${PATHTTS},"You will soon be forward to the menu!",en,any)
	same => n,Wait(3)
	same => n,Goto(main_menu,s,1)

exten => 96203,1,NoOp(Time: ${EXTEN} ${timezone})
		same => n,Goto(main_menu,s,1)



; CODIGO DE TESTE! CODIGO DE TESTE! CODIGO DE TESTE!
[main_menu]

exten => s,1,Verbose(1, Caller ${CALLERID(all)} has entered the auto attendant)
    same => n,Answer()

; this sets the inter-digit timer
    same => n,Set(TIMEOUT(digit)=2)
	same => n,Set(TIMEOUT(response)=6)

; wait one second to establish audio
    same => n,Wait(1)

    same => n(mainmenu),AGI(${PATHTTS},"Welcome to the Menu! To get the current time, press one. To set up a wake up call, press two. To cancel all wake up calls, press three. To obtain current stock value, press four. To hang up, press zero.",en,any)

    same => n(menuprompt), AGI(${PATHTTS},"Press any key:",en,any); MAIN MENU PROMPT
    same => n,WaitExten(4)                      ; mais de 4 segundos sem atividade desliga a chamada (como se precionasse 0)
    same => n,Goto(0,1)                         

; SABER AS HORAS
;exten => 1,1,Verbose(1, Caller ${CALLERID(all)} has entered the sales queue)

    exten => 1,1,AGI(${PATHTTS},"At the signal it will be:",en,any)
	same => n,Set(FUTURETIME=$[${EPOCH} + 4])
    same => n,SayUnixTime(${FUTURETIME},${timezone},HN)
;	same => n,Playback(spy-local)
	same => n,WaitUntil(${FUTURETIME})
	same => n,Playback(beep)
    same => n,goto(main_menu,s,1)

; MARCAR DESPERTADOR
;exten => 2,1,Verbose(1, Caller ${CALLERID(all)} has entered the service queue)

    exten => 2,1,AGI(${PATHTTS},"At the signal, please enter the wake up hour:",en,any)
	same => n(validateAgain),Wait(1)
	same => n,Playback(beep)
	same => n,Read(UserInput,,4)
	same => n,NoOp(Digits entered: ${UserInput})
	same => n,AGI(${PATHTTS},"Nicely done!",en,any)

	;VALIDACAO DAS HORAS e MINUTOS
	same => n(validation),GotoIf($[${UserInput:0:2} < 24]?:error) ;horas
	same => n,GotoIf($[${UserInput:2:2} < 60]?success:error) ;minutos
	same => n(error),AGI(${PATHTTS},"Please Enter The Time Again",en,any)
	same => n,GoTo(validateAgain)


	same => n(success),Set(currentDate=${STRFTIME(${EPOCH},,%Y%m%d)})
	same => n,Set(wakeupDate=${currentDate}${UserInput})
	same => n,Set(fileName=/tmp/${CALLERID(num)}-${UserInput})
	same => n,Set(atualTime=${STRFTIME(${EPOCH},,%H%M)})
	
	same => n,GotoIf($[${UserInput} < ${atualTime}]?tomorrow:today)

	; A CHAMADA É PARA HOJE 
	same => n(today),system(echo "Channel: SIP/${CALLERID(num)}\nMaxRetries: 2\nRetryTime: 60\nWaitTime: 30\nContext: demo\nExtension: 601\nCallerId: \"Acorda\"\nPriority: 1\n" >> ${fileName})
	same => n,system(touch -t ${wakeupDate} ${fileName})
	same => n,system(mv ${fileName} /var/spool/asterisk/outgoing/)
	same => n(error),AGI(${PATHTTS},"Wake up call Scheduled Successfully for today!",en,any)
	same => n,GoTo(main_menu,s,1)

	; A CHAMADA É PARA AMANHA
	same => n(tomorrow),Set(nextDayEpoch=$[${EPOCH}+86400])
	same => n,Set(nextDate=${STRFTIME(${nextDayEpoch},,%Y%m%d)})
	same => n,Set(wakeupDate=${nextDate}${UserInput})
	; O touch tem de ser depois do echo para nao ficar com a data de edicao do ficheiro
	same => n,system(echo "Channel: SIP/${CALLERID(num)}\nMaxRetries: 2\nRetryTime: 60\nWaitTime: 30\nContext: demo\nExtension: 601\nCallerId: \"Acorda\"\nPriority: 1\n" >> ${fileName})
	same => n,system(touch -t ${wakeupDate} ${fileName})
	same => n,system(mv ${fileName} /var/spool/asterisk/outgoing/)
    same => n(error),AGI(${PATHTTS},"Wake up call Scheduled Successfully for tomorrow!",en,any)
	same => n,GoTo(main_menu,s,1)

; APAGAR TODAS AS CHAMADAS AGENDADAS
exten => 3,1,AGI(${PATHTTS},"Clearing all scheduled calls!",en,any)
    same => n,Set(clearThis=${CALLERID(num)})
    same => n,system(rm /var/spool/asterisk/outgoing/${clearThis}*)
    same => n,AGI(${PATHTTS},"All scheduled calls have been successfully cleared!",en,any)
    same => n,GoTo(main_menu,s,1)

; CONSULTA A COTAÇÂO DO STOCK 
exten => 4,1,AGI(${PATHTTS},"Accessing current value of STOXX Europe 600 Index",en,any)
	same => n,Set(command_output=${SHELL(python3 /home/mint/Desktop/webscraper.py)})
    same => n,NoOp(Command output: ${command_output:0:-1})
	same => n,AGI(${PATHTTS},"${command_output:0:-1}",en,any) ; para não dizer com o /n
	same => n,GoTo(main_menu,s,1) 	

; TERMINA A CHAMADA
exten => 0,1,Verbose(1, Caller ${CALLERID(all)} is down)
    same => n,AGI(${PATHTTS},"Have a nice day! Goodbye!",en,any)      ; Took to long... Hang up
    same => n,Hangup()

; extensão inválida
exten => i,1,Verbose(1, Caller ${CALLERID(all)} has entered an invalid selection)
    same => n,Playback(invalid)
    same => n,GoTo(main_menu,s,1)

; extensão timeout
exten => t,1,Verbose(1, Caller ${CALLERID(all)} has timed out)
    same => n,Goto(0,1)

